/**
 * Check if freelancer can be booked.
 *
 * @param Service $service
 * @param Carbon $from
 * @param Carbon $until
 *
 * @return bool
 */
public function canBeBooked(Service $service, Carbon $from, Carbon $until)
{
    $checkers = [
        OffersService::class,
        IsValidTimeslot::class,
        HasAvailability::class,
        HasNotBeenReserved::class,
        HasEnoughBufferTime::class,
        DurationIsLongEnough::class,
        HasBeenGivenEnoughAdvanceNotice::class
    ];

    $exceptions = collect();

    foreach ($checkers as $checker) {
        try {
            (new $checker($this, $service, $from, $until))->check();
        } catch (FreelancerCannotBeBookedException $exception) {
            $exceptions->push($exception);
        }
    }

    if ($exceptions->isEmpty()) {
        return true;
    }

    throw new FreelancerCannotBeBookedException("{$this->name} can not be booked for {$service} from {$from} until {$until}", null, null, $exceptions->toArray());
}
